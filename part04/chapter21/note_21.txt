▼ データ構造

<データ構造>
　：情報をとりまとめて格納するためのフォーマット(形式)のこと

　Pythonの組み込みデータ構造(データ型)
    1.リスト
    2.タプル
    3.辞書
    4.スタック
    5.キュー

<スタック>
　：ミュータブルなデータ構造 = データの追加・削除が可能

　特徴
　　：データの追加(プッシュ)と削除(ポップ)を終端の要素(オブジェクト)に対してしか行えない

　LIFO(Last In First Out)
　　：最後に追加した要素(オブジェクト)に対してしか参照・操作できないデータ構造のこと

　Pythonの基本仕様
　　：データ構造に要素(オブジェクト)が格納されている場合は「True」を返す
　　：データ構造に要素(オブジェクト)が格納されていない場合は「False」を返す

<スタック構造をプログラミング>
　：スタックの機能を持つクラスを定義
    1.スタックの容器を作成するメソッドを定義⇒特殊メソッド(__init__)をオーバーライドしてインスタンスオブジェクトを作成する！
    2.スタックに要素(オブジェクト)が格納されているか確認するメソッドを定義
    3.スタックに要素(オブジェクト)を追加するメソッドを定義⇒スタックに対してappendメソッドを使用する！
    4.スタックから終端の要素(オブジェクト)を削除する⇒スタックに対してpopメソッドを使用する！
    5.スタックの終端の要素(オブジェクト)を取得するメソッドを定義⇒マイナスインデックスを使用する！
    6.スタックに要素(オブジェクト)数を取得するメソッドを定義⇒スタックに対してlen関数を使用する！

<キュー>
　：ミュータブルなデータ構造 = データの追加・削除が可能

　FIFO(First In First Out)
　　：最初に追加した要素(オブジェクト)に対してしか参照・操作できないデータ構造のこと = スタックとは逆の性質を持つデータ構造

<キュー構造をプログラミング>
　：キューの機能を持つクラスを定義
    1.キューの容器を作成するメソッドを定義⇒特殊メソッド(__init__)をオーバーライドしてインスタンスオブジェクトを作成する！
    2.キューに要素(オブジェクト)が格納されているか確認するメソッドを定義
    3.キューに要素(オブジェクト)を追加するメソッドを定義⇒insertメソッドとインデックス「0」を使用して新しい要素(オブジェクト)を先頭に追加する！
    4.キューから要素(オブジェクト)を追加するメソッドを定義⇒popメソッドを使用する！
    5.キューの要素(オブジェクト)数を取得するメソッドを定義⇒キューに対してlen関数を使用する！

<エポック(epoch)>
　：基準時間(1970年1月1日0時0分0秒)のこと