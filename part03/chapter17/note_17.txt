▼ 正規表現

<正規表現>
　：連続した文字列の検索パターンを定義 = 文字列の集合を１つの文字列で表現する方法のこと

<イースターエッグ>
　：プログラム内に隠されたメッセージのこと

<シンプルな一致(シンプルマッチ)>
　：文字列を指定して一致する文字列を表示する検索パターンのこと
　⇒$ grep 検索正規表現(=検索する文字列) 対象のファイルパス

　grepコマンドのフラグ
　1.$ grep -i
　　：大文字小文字の違いを無視して文字列を検索する

　2.$ grep -o
　　：検索正規表現(検索する文字列)と一致する文字列のみ出力する

<正規表現をPythonで実行>
　1.標準モジュールの「re(regular expression)」モジュールをインポート
　2.findall()メソッドで検索正規表現(検索する文字列)と検索対象のテキストorファイルを指定する
　⇒re.findall(検索正規表現, 検索対象のテキストorファイル)
　3.一致する文字列はリスト型オブジェクトで出力される！

　フラグ(オプション)を指定する
　　：第三引数に使用するフラグ(オプション)を設定する
　　⇒re.findall(検索正規表現, 検索対象のテキストorファイル, re.設定するフラグ)

　findall()メソッドのフラグ
　1.IGNORECASE
　　：大文字小文字の違いを無視して文字列を検索する = $ grep -i

　2.MULTILINE
　　：複数行の文字列の中で各行の先頭と終端を認識する

<前方一致と後方一致>
　：特別な文字を使用することで複雑な検索パターンを定義できる

　前方一致(^)
　　：検索正規表現(検索する文字列)と行の先頭が一致する行を出力する検索パターンのこと
　　⇒$ grep ^検索正規表現(検索する文字列) 対象のファイルパス

　空白文字列とも一致
　　：ピリオドを使用すると空白文字列も含めて検索する(=どんな文字列とも一致)
　　⇒$ grep 検索正規表現(検索する文字列). 対象のファイルパス

　後方一致
　　：検索正規表現(検索する文字列)と行の終端が一致する行を出力する検索パターンのこと
　　⇒$ grep 検索正規表現(検索する文字列)$ 対象のファイルパス

<複数文字との一致>
　：検索正規表現(検索する文字列)に幾つかの文字を指定する検索パターンのこと
　⇒$ grep [複数の検索正規表現(検索する文字列)] 対象のファイルパス

<数値との一致>
　：数値と一致させる検索パターンのこと
　⇒$ grep "[[:digit:]]"

　Pythonで実行する場合
　⇒re.findall("\d", 対象のテキストorファイル, re.設定するフラグ)

<繰り返し>
　：特定の繰り返しパターンと一致する文字列を出力する検索パターンのこと

　1.直前のパターンを０回以上繰り返す「*」
　　⇒アスタリスクは貪欲な正規表現の為できるだけ長い文字列を出力する

　2.どんな文字列でも０回以上繰り返す「.*」
　　⇒どんな文字列にも当てはまるピリオドを０回以上繰り返すパターンと一致する文字列を出力する

　3.非貪欲な繰り返し「*?」
　　⇒特定のパターンと一致して出来るだけ少ない文字列を出力する

<エスケープ文字>
　：プログラムの中で特別な意味を持つ記号を、そのまま検索する検索パターンのこと
　⇒ $ grep \\特別な記号 対象のテキストorファイル

　Pythonでエスケープを実行
　⇒re.findall("\\特別な記号", 対象のテキストorファイル, re.フラグ)