▼ Bash

<Bash>
　：コマンドラインインターフェースと呼ばれるプログラムを実行する為のツール
　　⇒パッケージ管理・バージョン管理・正規表現を使用する時に重要なツールである！

<Bashを使うために>
　1.Windos
　　：「Ubuntu LTS」を使用する

　2.AWS
　　：「Ubuntu」サーバーを起動する

<コマンド>
　：Pythonの関数のような機能
　　⇒$ コマンド コマンドに渡す入力値(引数)

　コマンドの例
　01. $ echo
　　：Pythonのprint関数に該当する

　02. $ python3
　　：Pythonの機能を実行できる

　03. $ history
　　：実行したコマンドの履歴を表示する

　04. $ pwd
　　：作業ディレクトリ(フォルダ)を表示する = print working directory

　05. $ cd 絶対パスor相対パス
　　：指定したパスのディレクトリ(フォルダ)に移動する
　　⇒引数に「..」を指定すると１階層上のディレクトリ(フォルダ)に移動する

　06. $ ls
　　：作業ディレクトリ内の他のディレクトリ(フォルダ)とファイルを表示する
　　⇒フラグ(オプション)に「-a」を付けると隠しファイルも表示することができる！

　07. $ mkdir ディレクトリ(フォルダ)名
　　：新しいディレクトリ(フォルダ)を作成する

　08. $ rmdir ディレクトリ(フォルダ)名
　　：ディレクトリ(フォルダ)を削除する

　09. $ touch ファイル名
　　：新しいファイルを作成する
　　⇒ファイル名の先頭に「.」を付けると隠しファイルになる！

　10.$ whoami
　　：ユーザー名を表示する

<絶対パスvs相対パス>
　絶対パス
　　：ルートディレクトリを起点にほかのディレクトリ(フォルダ)やファイルの場所を表示するパス
　　　⇒/ディレクトリ/ディレクトリ/..../ファイル
　　　⇒必ず先頭にスラッシュ(/)を付ける！

　相対パス
　　：作業ディレクトリを起点に他のディレクトリ(フォルダ)やファイルの場所を表示するパス
　　　⇒作業ディレクトリ/ディレクトリ/.../ファイル

　パスとは？
　　：ディレクトリ(フォルダ)やファイルがOS内の何処にあるかを表すもの

　ディレクトリとは？
　　：OS内のフォルダのこと

　作業ディレクトリとは？
　　：ユーザーが使用中のディレクトリ(フォルダ) = Working Directory

　ツリー構造
　　：OS内のディレクトリ(フォルダ)構造を表現するもの
　　　⇒一番上のディレクトリ(フォルダ)を「root」と呼ぶ！

<作業ディレクトリの変更>
　：cdコマンドを使用して変更する
　　⇒$ cd 絶対パスor相対パス

<フラグ>
　：コマンドの動作を変更する時に使用するオプション
　⇒$ コマンド名 -- フラグ名 or - フラグ名
　⇒フラグを省略した場合は「False」評価となり機能しない
　⇒複数のフラグを同時に設定することもできる！

<隠しファイル>
　：デフォルトでは見えないようになっているファイルのこと
　⇒ユーザーが間違って削除したり変更したりすることを防ぐ役割を持つ
　⇒隠しファイルは名前の先頭に「.」を付ける！

<パイプ>
　：コマンドの実行結果を別のコマンドの入力値(引数)として指定できる
　⇒$ コマンドA | コマンドB

<環境変数>
　：OSにデータ(値)を記録しておくための変数のこと
　⇒$ export 変数名=データ(値)
　⇒イコールの両辺に空白は入れない！

　環境変数を参照
　⇒$ echo $環境変数名

　環境変数の注意点
　：Bashを終了すると定義した環境変数と保存したデータ(値)は自動的に削除される

　環境変数を保存
　：ホームディレクトの「.profile」隠しファイルに環境変数を定義する

<ユーザー>
　：OSを使用する人のこと

　rootユーザー
　：一番高い権限を持っているユーザー = スーパーユーザー
　⇒Linux系OSでは「/home」がルートユーザーのディレクトリ(フォルダ)として表示！
　⇒各ユーザーのホームディレクトリは「/home/ディレクトリ/...」として表示される！

　rootユーザーの注意点
　：OSの基本設定を変更できる権限を持っているため普段は使用してはいけない！

　rootユーザーとしてコマンド実行
　：「sudo(superuser do)」コマンドを実行コマンドの前に追加する
　⇒$sudo コマンド

<チャレンジ>
問題1

問題2

問題3